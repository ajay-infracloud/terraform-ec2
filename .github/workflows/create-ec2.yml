name: Create EC2 Instance

on:
  workflow_dispatch:
    inputs:
      instanceName:
        description: 'Name of the EC2 instance'
        required: true
        # default: 'example-instance'
      awsRegion:
        description: 'AWS region'
        required: true
        default: 'us-east-1'
      instanceType:
        description: 'EC2 instance type'
        required: true
        default: 't2.micro'
      action:
        description: 'TF action to apply/delete'
        required: true
        default: 'apply'

  # push:
  #   branches:
  #     - main  # Trigger workflow on push to the main branch

jobs:
  terraform:
    name: Provision EC2 Instance
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0  # Specify the Terraform version you want to use
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run:  env TF_VAR_instance_name=${{ github.event.inputs.instanceName }} \
            TF_VAR_aws_region=${{ github.event.inputs.awsRegion }} \
            TF_VAR_instance_type=${{ github.event.inputs.instanceType }} \ 
            terraform plan 
   
    - name: Terraform Apply
      run: terraform ${{ github.event.inputs.actions }} -auto-approve -var="instance_name=${{ github.event.inputs.instanceName }}" -var="aws_region=${{ github.event.inputs.awsRegion }}" -var="instance_type=${{ github.event.inputs.instanceType }}"
